// Code generated by taurus_go, DO NOT EDIT.

package blog

import (
	"time"

	"github.com/yohobala/taurus_go/entity"
	"github.com/yohobala/taurus_go/entity/field"
)

// IDType is ID field
type IDType struct {
	field.IntStorage[int64]
	config *BlogEntityConfig
}

// newIDType creates a new IDType
func newIDType(c *BlogEntityConfig) *IDType {
	t := &IDType{}
	t.config = c
	return t
}

// Set sets the value of ID field
func (t *IDType) Set(v int64) {
	t.IntStorage.Set(v)
	if t.config.State() == entity.Unchanged {
		t.config.mutations.ChangeEntityState(t.config.Mutation, entity.Modified)
		t.config.Mutation.SetFields(FieldID.Name.String())
	}
}

// Get gets the value of ID field
func (t *IDType) Get() *int64 {
	return t.IntStorage.Get()
}

// UUIDType is UUID field
type UUIDType struct {
	field.StringStorage
	config *BlogEntityConfig
}

// newUUIDType creates a new UUIDType
func newUUIDType(c *BlogEntityConfig) *UUIDType {
	t := &UUIDType{}
	t.config = c
	return t
}

// Set sets the value of UUID field
func (t *UUIDType) Set(v string) {
	t.StringStorage.Set(v)
	if t.config.State() == entity.Unchanged {
		t.config.mutations.ChangeEntityState(t.config.Mutation, entity.Modified)
		t.config.Mutation.SetFields(FieldUUID.Name.String())
	}
}

// Get gets the value of UUID field
func (t *UUIDType) Get() *string {
	return t.StringStorage.Get()
}

// DescType is Desc field
type DescType struct {
	field.StringStorage
	config *BlogEntityConfig
}

// newDescType creates a new DescType
func newDescType(c *BlogEntityConfig) *DescType {
	t := &DescType{}
	t.config = c
	return t
}

// Set sets the value of Desc field
func (t *DescType) Set(v string) {
	t.StringStorage.Set(v)
	if t.config.State() == entity.Unchanged {
		t.config.mutations.ChangeEntityState(t.config.Mutation, entity.Modified)
		t.config.Mutation.SetFields(FieldDesc.Name.String())
	}
}

// Get gets the value of Desc field
func (t *DescType) Get() *string {
	return t.StringStorage.Get()
}

// CreatedTimeType is CreatedTime field
type CreatedTimeType struct {
	field.TimestampStorage
	config *BlogEntityConfig
}

// newCreatedTimeType creates a new CreatedTimeType
func newCreatedTimeType(c *BlogEntityConfig) *CreatedTimeType {
	t := &CreatedTimeType{}
	t.config = c
	return t
}

// Set sets the value of CreatedTime field
func (t *CreatedTimeType) Set(v time.Time) {
	t.TimestampStorage.Set(v)
	if t.config.State() == entity.Unchanged {
		t.config.mutations.ChangeEntityState(t.config.Mutation, entity.Modified)
		t.config.Mutation.SetFields(FieldCreatedTime.Name.String())
	}
}

// Get gets the value of CreatedTime field
func (t *CreatedTimeType) Get() *time.Time {
	return t.TimestampStorage.Get()
}

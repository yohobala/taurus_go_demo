// Code generated by taurus_go, DO NOT EDIT.

package entity

import (
	"context"

	"github.com/yohobala/taurus_go/entity"
	"github.com/yohobala/taurus_go/entity/entitysql"

	"taurus_go_demo/entity/new/entity/blog"
	"taurus_go_demo/entity/new/entity/internal"
)

const UserTag = "UserTag"

// User  is an struct of the database
type User struct {
	*internal.Config
	tracker entity.Tracker

	Blogs *blog.BlogEntityBuilder
}

// NewUser creates a new User instance.
func NewUser() (*User, error) {
	config, err := internal.NewConfig(UserTag)
	if err != nil {
		return nil, err
	}
	user := &User{
		Config:  config,
		tracker: &entity.Tracking{},
	}
	user.init()
	return user, nil
}

// Close closes the database.
func (d *User) Close() error {
	return d.Driver.Close()
}

// Save saves all changes to the database.
func (d *User) Save(ctx context.Context) error {
	tx, err := d.Config.MayTx(ctx)
	if err != nil {
		return err
	}
	if err := func() error {
		for _, m := range d.tracker.Mutators() {
			if err := m.Exec(ctx, tx); err != nil {
				return err
			}
		}
		return nil
	}(); err != nil {
		return entitysql.Rollback(tx, err)
	}
	return tx.Commit()
}

func (d *User) init() {
	d.Blogs = blog.NewBlogEntityBuilder(d.Config, d.tracker)
	d.tracker.Add(d.Blogs)
}
